// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/messages/Messages.proto

#ifndef PROTOBUF_src_2fmessages_2fMessages_2eproto__INCLUDED
#define PROTOBUF_src_2fmessages_2fMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace mydb {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Request_TextRowEntry;
class Request_TextRowEntryDefaultTypeInternal;
extern Request_TextRowEntryDefaultTypeInternal _Request_TextRowEntry_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Response_TextResultEntry;
class Response_TextResultEntryDefaultTypeInternal;
extern Response_TextResultEntryDefaultTypeInternal _Response_TextResultEntry_default_instance_;
}  // namespace mydb

namespace mydb {

namespace protobuf_src_2fmessages_2fMessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_src_2fmessages_2fMessages_2eproto

enum Request_REQUEST_TYPE {
  Request_REQUEST_TYPE_INSERT_TEXT = 0,
  Request_REQUEST_TYPE_INSERT_LONG = 1,
  Request_REQUEST_TYPE_READ_TEXT = 2,
  Request_REQUEST_TYPE_READ_LONG = 3,
  Request_REQUEST_TYPE_UPDATE_TEXT = 4,
  Request_REQUEST_TYPE_UPDATE_LONG = 5,
  Request_REQUEST_TYPE_DELETE = 6,
  Request_REQUEST_TYPE_Request_REQUEST_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_REQUEST_TYPE_Request_REQUEST_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_REQUEST_TYPE_IsValid(int value);
const Request_REQUEST_TYPE Request_REQUEST_TYPE_REQUEST_TYPE_MIN = Request_REQUEST_TYPE_INSERT_TEXT;
const Request_REQUEST_TYPE Request_REQUEST_TYPE_REQUEST_TYPE_MAX = Request_REQUEST_TYPE_DELETE;
const int Request_REQUEST_TYPE_REQUEST_TYPE_ARRAYSIZE = Request_REQUEST_TYPE_REQUEST_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_REQUEST_TYPE_descriptor();
inline const ::std::string& Request_REQUEST_TYPE_Name(Request_REQUEST_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_REQUEST_TYPE_descriptor(), value);
}
inline bool Request_REQUEST_TYPE_Parse(
    const ::std::string& name, Request_REQUEST_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_REQUEST_TYPE>(
    Request_REQUEST_TYPE_descriptor(), name, value);
}
enum Response_RESPONSE_TYPE {
  Response_RESPONSE_TYPE_READ_TEXT = 0,
  Response_RESPONSE_TYPE_READ_LONG = 1,
  Response_RESPONSE_TYPE_STATUS = 2,
  Response_RESPONSE_TYPE_Response_RESPONSE_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_RESPONSE_TYPE_Response_RESPONSE_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_RESPONSE_TYPE_IsValid(int value);
const Response_RESPONSE_TYPE Response_RESPONSE_TYPE_RESPONSE_TYPE_MIN = Response_RESPONSE_TYPE_READ_TEXT;
const Response_RESPONSE_TYPE Response_RESPONSE_TYPE_RESPONSE_TYPE_MAX = Response_RESPONSE_TYPE_STATUS;
const int Response_RESPONSE_TYPE_RESPONSE_TYPE_ARRAYSIZE = Response_RESPONSE_TYPE_RESPONSE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_RESPONSE_TYPE_descriptor();
inline const ::std::string& Response_RESPONSE_TYPE_Name(Response_RESPONSE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_RESPONSE_TYPE_descriptor(), value);
}
inline bool Response_RESPONSE_TYPE_Parse(
    const ::std::string& name, Response_RESPONSE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_RESPONSE_TYPE>(
    Response_RESPONSE_TYPE_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mydb.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef Request_REQUEST_TYPE REQUEST_TYPE;
  static const REQUEST_TYPE INSERT_TEXT =
    Request_REQUEST_TYPE_INSERT_TEXT;
  static const REQUEST_TYPE INSERT_LONG =
    Request_REQUEST_TYPE_INSERT_LONG;
  static const REQUEST_TYPE READ_TEXT =
    Request_REQUEST_TYPE_READ_TEXT;
  static const REQUEST_TYPE READ_LONG =
    Request_REQUEST_TYPE_READ_LONG;
  static const REQUEST_TYPE UPDATE_TEXT =
    Request_REQUEST_TYPE_UPDATE_TEXT;
  static const REQUEST_TYPE UPDATE_LONG =
    Request_REQUEST_TYPE_UPDATE_LONG;
  static const REQUEST_TYPE DELETE =
    Request_REQUEST_TYPE_DELETE;
  static inline bool REQUEST_TYPE_IsValid(int value) {
    return Request_REQUEST_TYPE_IsValid(value);
  }
  static const REQUEST_TYPE REQUEST_TYPE_MIN =
    Request_REQUEST_TYPE_REQUEST_TYPE_MIN;
  static const REQUEST_TYPE REQUEST_TYPE_MAX =
    Request_REQUEST_TYPE_REQUEST_TYPE_MAX;
  static const int REQUEST_TYPE_ARRAYSIZE =
    Request_REQUEST_TYPE_REQUEST_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  REQUEST_TYPE_descriptor() {
    return Request_REQUEST_TYPE_descriptor();
  }
  static inline const ::std::string& REQUEST_TYPE_Name(REQUEST_TYPE value) {
    return Request_REQUEST_TYPE_Name(value);
  }
  static inline bool REQUEST_TYPE_Parse(const ::std::string& name,
      REQUEST_TYPE* value) {
    return Request_REQUEST_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string fields = 4;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 4;
  const ::std::string& fields(int index) const;
  ::std::string* mutable_fields(int index);
  void set_fields(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_fields(int index, ::std::string&& value);
  #endif
  void set_fields(int index, const char* value);
  void set_fields(int index, const char* value, size_t size);
  ::std::string* add_fields();
  void add_fields(const ::std::string& value);
  #if LANG_CXX11
  void add_fields(::std::string&& value);
  #endif
  void add_fields(const char* value);
  void add_fields(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& fields() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fields();

  // map<string, bytes> text_row = 5;
  int text_row_size() const;
  void clear_text_row();
  static const int kTextRowFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      text_row() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_text_row();

  // string table = 2;
  void clear_table();
  static const int kTableFieldNumber = 2;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // string key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string long_field = 6;
  void clear_long_field();
  static const int kLongFieldFieldNumber = 6;
  const ::std::string& long_field() const;
  void set_long_field(const ::std::string& value);
  #if LANG_CXX11
  void set_long_field(::std::string&& value);
  #endif
  void set_long_field(const char* value);
  void set_long_field(const char* value, size_t size);
  ::std::string* mutable_long_field();
  ::std::string* release_long_field();
  void set_allocated_long_field(::std::string* long_field);

  // sint64 long_row = 7;
  void clear_long_row();
  static const int kLongRowFieldNumber = 7;
  ::google::protobuf::int64 long_row() const;
  void set_long_row(::google::protobuf::int64 value);

  // .mydb.Request.REQUEST_TYPE type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::mydb::Request_REQUEST_TYPE type() const;
  void set_type(::mydb::Request_REQUEST_TYPE value);

  // @@protoc_insertion_point(class_scope:mydb.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fields_;
  public:
  class Request_TextRowEntry : public ::google::protobuf::internal::MapEntry<Request_TextRowEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Request_TextRowEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > SuperType;
    Request_TextRowEntry();
    Request_TextRowEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Request_TextRowEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Request_TextRowEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Request_TextRowEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > text_row_;
  private:
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr long_field_;
  ::google::protobuf::int64 long_row_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_src_2fmessages_2fMessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mydb.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef Response_RESPONSE_TYPE RESPONSE_TYPE;
  static const RESPONSE_TYPE READ_TEXT =
    Response_RESPONSE_TYPE_READ_TEXT;
  static const RESPONSE_TYPE READ_LONG =
    Response_RESPONSE_TYPE_READ_LONG;
  static const RESPONSE_TYPE STATUS =
    Response_RESPONSE_TYPE_STATUS;
  static inline bool RESPONSE_TYPE_IsValid(int value) {
    return Response_RESPONSE_TYPE_IsValid(value);
  }
  static const RESPONSE_TYPE RESPONSE_TYPE_MIN =
    Response_RESPONSE_TYPE_RESPONSE_TYPE_MIN;
  static const RESPONSE_TYPE RESPONSE_TYPE_MAX =
    Response_RESPONSE_TYPE_RESPONSE_TYPE_MAX;
  static const int RESPONSE_TYPE_ARRAYSIZE =
    Response_RESPONSE_TYPE_RESPONSE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESPONSE_TYPE_descriptor() {
    return Response_RESPONSE_TYPE_descriptor();
  }
  static inline const ::std::string& RESPONSE_TYPE_Name(RESPONSE_TYPE value) {
    return Response_RESPONSE_TYPE_Name(value);
  }
  static inline bool RESPONSE_TYPE_Parse(const ::std::string& name,
      RESPONSE_TYPE* value) {
    return Response_RESPONSE_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, bytes> text_result = 4;
  int text_result_size() const;
  void clear_text_result();
  static const int kTextResultFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      text_result() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_text_result();

  // string long_result = 3;
  void clear_long_result();
  static const int kLongResultFieldNumber = 3;
  const ::std::string& long_result() const;
  void set_long_result(const ::std::string& value);
  #if LANG_CXX11
  void set_long_result(::std::string&& value);
  #endif
  void set_long_result(const char* value);
  void set_long_result(const char* value, size_t size);
  ::std::string* mutable_long_result();
  ::std::string* release_long_result();
  void set_allocated_long_result(::std::string* long_result);

  // .mydb.Response.RESPONSE_TYPE type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::mydb::Response_RESPONSE_TYPE type() const;
  void set_type(::mydb::Response_RESPONSE_TYPE value);

  // bool isStatusOk = 2;
  void clear_isstatusok();
  static const int kIsStatusOkFieldNumber = 2;
  bool isstatusok() const;
  void set_isstatusok(bool value);

  // @@protoc_insertion_point(class_scope:mydb.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Response_TextResultEntry : public ::google::protobuf::internal::MapEntry<Response_TextResultEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Response_TextResultEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > SuperType;
    Response_TextResultEntry();
    Response_TextResultEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Response_TextResultEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Response_TextResultEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Response_TextResultEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > text_result_;
  private:
  ::google::protobuf::internal::ArenaStringPtr long_result_;
  int type_;
  bool isstatusok_;
  mutable int _cached_size_;
  friend struct protobuf_src_2fmessages_2fMessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// Request

// .mydb.Request.REQUEST_TYPE type = 1;
inline void Request::clear_type() {
  type_ = 0;
}
inline ::mydb::Request_REQUEST_TYPE Request::type() const {
  // @@protoc_insertion_point(field_get:mydb.Request.type)
  return static_cast< ::mydb::Request_REQUEST_TYPE >(type_);
}
inline void Request::set_type(::mydb::Request_REQUEST_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mydb.Request.type)
}

// string table = 2;
inline void Request::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::table() const {
  // @@protoc_insertion_point(field_get:mydb.Request.table)
  return table_.GetNoArena();
}
inline void Request::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mydb.Request.table)
}
#if LANG_CXX11
inline void Request::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mydb.Request.table)
}
#endif
inline void Request::set_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mydb.Request.table)
}
inline void Request::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mydb.Request.table)
}
inline ::std::string* Request::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:mydb.Request.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_table() {
  // @@protoc_insertion_point(field_release:mydb.Request.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:mydb.Request.table)
}

// string key = 3;
inline void Request::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::key() const {
  // @@protoc_insertion_point(field_get:mydb.Request.key)
  return key_.GetNoArena();
}
inline void Request::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mydb.Request.key)
}
#if LANG_CXX11
inline void Request::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mydb.Request.key)
}
#endif
inline void Request::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mydb.Request.key)
}
inline void Request::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mydb.Request.key)
}
inline ::std::string* Request::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:mydb.Request.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_key() {
  // @@protoc_insertion_point(field_release:mydb.Request.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:mydb.Request.key)
}

// repeated string fields = 4;
inline int Request::fields_size() const {
  return fields_.size();
}
inline void Request::clear_fields() {
  fields_.Clear();
}
inline const ::std::string& Request::fields(int index) const {
  // @@protoc_insertion_point(field_get:mydb.Request.fields)
  return fields_.Get(index);
}
inline ::std::string* Request::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:mydb.Request.fields)
  return fields_.Mutable(index);
}
inline void Request::set_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mydb.Request.fields)
  fields_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Request::set_fields(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mydb.Request.fields)
  fields_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Request::set_fields(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mydb.Request.fields)
}
inline void Request::set_fields(int index, const char* value, size_t size) {
  fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mydb.Request.fields)
}
inline ::std::string* Request::add_fields() {
  // @@protoc_insertion_point(field_add_mutable:mydb.Request.fields)
  return fields_.Add();
}
inline void Request::add_fields(const ::std::string& value) {
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mydb.Request.fields)
}
#if LANG_CXX11
inline void Request::add_fields(::std::string&& value) {
  fields_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mydb.Request.fields)
}
#endif
inline void Request::add_fields(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mydb.Request.fields)
}
inline void Request::add_fields(const char* value, size_t size) {
  fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mydb.Request.fields)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::fields() const {
  // @@protoc_insertion_point(field_list:mydb.Request.fields)
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:mydb.Request.fields)
  return &fields_;
}

// map<string, bytes> text_row = 5;
inline int Request::text_row_size() const {
  return text_row_.size();
}
inline void Request::clear_text_row() {
  text_row_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Request::text_row() const {
  // @@protoc_insertion_point(field_map:mydb.Request.text_row)
  return text_row_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Request::mutable_text_row() {
  // @@protoc_insertion_point(field_mutable_map:mydb.Request.text_row)
  return text_row_.MutableMap();
}

// string long_field = 6;
inline void Request::clear_long_field() {
  long_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::long_field() const {
  // @@protoc_insertion_point(field_get:mydb.Request.long_field)
  return long_field_.GetNoArena();
}
inline void Request::set_long_field(const ::std::string& value) {
  
  long_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mydb.Request.long_field)
}
#if LANG_CXX11
inline void Request::set_long_field(::std::string&& value) {
  
  long_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mydb.Request.long_field)
}
#endif
inline void Request::set_long_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  long_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mydb.Request.long_field)
}
inline void Request::set_long_field(const char* value, size_t size) {
  
  long_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mydb.Request.long_field)
}
inline ::std::string* Request::mutable_long_field() {
  
  // @@protoc_insertion_point(field_mutable:mydb.Request.long_field)
  return long_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_long_field() {
  // @@protoc_insertion_point(field_release:mydb.Request.long_field)
  
  return long_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_long_field(::std::string* long_field) {
  if (long_field != NULL) {
    
  } else {
    
  }
  long_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), long_field);
  // @@protoc_insertion_point(field_set_allocated:mydb.Request.long_field)
}

// sint64 long_row = 7;
inline void Request::clear_long_row() {
  long_row_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Request::long_row() const {
  // @@protoc_insertion_point(field_get:mydb.Request.long_row)
  return long_row_;
}
inline void Request::set_long_row(::google::protobuf::int64 value) {
  
  long_row_ = value;
  // @@protoc_insertion_point(field_set:mydb.Request.long_row)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Response

// .mydb.Response.RESPONSE_TYPE type = 1;
inline void Response::clear_type() {
  type_ = 0;
}
inline ::mydb::Response_RESPONSE_TYPE Response::type() const {
  // @@protoc_insertion_point(field_get:mydb.Response.type)
  return static_cast< ::mydb::Response_RESPONSE_TYPE >(type_);
}
inline void Response::set_type(::mydb::Response_RESPONSE_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mydb.Response.type)
}

// bool isStatusOk = 2;
inline void Response::clear_isstatusok() {
  isstatusok_ = false;
}
inline bool Response::isstatusok() const {
  // @@protoc_insertion_point(field_get:mydb.Response.isStatusOk)
  return isstatusok_;
}
inline void Response::set_isstatusok(bool value) {
  
  isstatusok_ = value;
  // @@protoc_insertion_point(field_set:mydb.Response.isStatusOk)
}

// string long_result = 3;
inline void Response::clear_long_result() {
  long_result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::long_result() const {
  // @@protoc_insertion_point(field_get:mydb.Response.long_result)
  return long_result_.GetNoArena();
}
inline void Response::set_long_result(const ::std::string& value) {
  
  long_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mydb.Response.long_result)
}
#if LANG_CXX11
inline void Response::set_long_result(::std::string&& value) {
  
  long_result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mydb.Response.long_result)
}
#endif
inline void Response::set_long_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  long_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mydb.Response.long_result)
}
inline void Response::set_long_result(const char* value, size_t size) {
  
  long_result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mydb.Response.long_result)
}
inline ::std::string* Response::mutable_long_result() {
  
  // @@protoc_insertion_point(field_mutable:mydb.Response.long_result)
  return long_result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_long_result() {
  // @@protoc_insertion_point(field_release:mydb.Response.long_result)
  
  return long_result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_long_result(::std::string* long_result) {
  if (long_result != NULL) {
    
  } else {
    
  }
  long_result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), long_result);
  // @@protoc_insertion_point(field_set_allocated:mydb.Response.long_result)
}

// map<string, bytes> text_result = 4;
inline int Response::text_result_size() const {
  return text_result_.size();
}
inline void Response::clear_text_result() {
  text_result_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Response::text_result() const {
  // @@protoc_insertion_point(field_map:mydb.Response.text_result)
  return text_result_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Response::mutable_text_result() {
  // @@protoc_insertion_point(field_mutable_map:mydb.Response.text_result)
  return text_result_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mydb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mydb::Request_REQUEST_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mydb::Request_REQUEST_TYPE>() {
  return ::mydb::Request_REQUEST_TYPE_descriptor();
}
template <> struct is_proto_enum< ::mydb::Response_RESPONSE_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mydb::Response_RESPONSE_TYPE>() {
  return ::mydb::Response_RESPONSE_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_src_2fmessages_2fMessages_2eproto__INCLUDED
